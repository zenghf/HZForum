sql:
    username: guest
    password: 123456


server:
    port: 8080
    max-http-header-size: 8192
    compression:
        min-response-size: 512
        enabled: true
        mime-types: text/html,text/css,text/javascript,application/javascript,image/gif,image/png,image/jpg
#    undertow:
#        io-threads: 4
#        worker-threads: 10
#        buffer-size: 16384
#        accesslog:
#            enabled: false
#            dir: /home/jcala/blog/log/server_log
#            pattern: combined
    tomcat:
          maxThreads: 10
          minSpareThreads: 3
          accesslog:
            directory: /Users/hzeng/temp/blog/log
            pattern: combined
            enabled: true
logging:
    level:
        ROOT: INFO
#    config: classpath:log4j2.xml
#    path: /home/jcala/blog/log/spring_log
spring:
    http:
        encoding.charset: UTF-8
        encoding.force: false
        multipart:
          max-file-size: 3MB
          max-request-size: 10MB
    cache:
        cache-names: ehcache
        ehcache:
            config: ehcache.xml

    datasource:
          driver-class-name: com.mysql.jdbc.Driver
          url: jdbc:mysql://127.0.0.1:3306/df?useSSL=false
          username: ${sql.username}
          password: ${sql.password}
    redis:
        pool:
            host: localhost # Redis server host.
            port: 6379 # Redis server port.
            timeout: 5000 # Connection timeout in milliseconds.
            password:  password123456 # Login password of the redis server.
        max-total: 200
        max-active: 200 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
        max-idle: 50 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
        max-wait: -1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
        min-idle: 20 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
        maxWaitMillis: 3000
        test-on-borrow: true
        test-on-return: true

    mail:
        host: smtp.yeah.net
        username: fanchao100@yeah.net
        password: XXXXXX
        java-mail-properties:
            mail.smtp.auth: true
    mapper.base-package: com.example.mapper

mybatis:
    type-aliases-package: me.jcala.blog.domain,me.jcala.blog.mapping
    type-handlers-package: org.apache.ibatis.type.LocalDateTypeHandler
    config-location: classpath:mybatis-config.xml
pic:
    home: /Users/hzeng/temp/blog/pic









